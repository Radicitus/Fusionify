{"ast":null,"code":"import getUserLocale from 'get-user-locale';\n\nfunction getFormatter(options) {\n  return function (locale, date) {\n    return date.toLocaleString(locale || getUserLocale(), options);\n  };\n}\n/**\r\n * Changes the hour in a Date to ensure right date formatting even if DST is messed up.\r\n * Workaround for bug in WebKit and Firefox with historical dates.\r\n * For more details, see:\r\n * https://bugs.chromium.org/p/chromium/issues/detail?id=750465\r\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1385643\r\n *\r\n * @param {Date} date Date.\r\n */\n\n\nfunction toSafeHour(date) {\n  var safeDate = new Date(date);\n  return new Date(safeDate.setHours(12));\n}\n\nfunction getSafeFormatter(options) {\n  return function (locale, date) {\n    return getFormatter(options)(locale, toSafeHour(date));\n  };\n}\n\nvar formatDateOptions = {\n  day: 'numeric',\n  month: 'numeric',\n  year: 'numeric'\n};\nvar formatLongDateOptions = {\n  day: 'numeric',\n  month: 'long',\n  year: 'numeric'\n};\nvar formatMonthOptions = {\n  month: 'long'\n};\nvar formatMonthYearOptions = {\n  month: 'long',\n  year: 'numeric'\n};\nvar formatYearOptions = {\n  year: 'numeric'\n};\nvar formatShortWeekdayOptions = {\n  weekday: 'short'\n};\nvar formatWeekdayOptions = {\n  weekday: 'long'\n};\nexport var formatDate = getSafeFormatter(formatDateOptions);\nexport var formatLongDate = getSafeFormatter(formatLongDateOptions);\nexport var formatMonth = getSafeFormatter(formatMonthOptions);\nexport var formatMonthYear = getSafeFormatter(formatMonthYearOptions);\nexport var formatYear = getSafeFormatter(formatYearOptions);\nexport var formatShortWeekday = getSafeFormatter(formatShortWeekdayOptions);\nexport var formatWeekday = getSafeFormatter(formatWeekdayOptions);","map":{"version":3,"sources":["C:/Users/aljon/Documents/Fusionify/Frontend/web/node_modules/react-calendar/dist/esm/shared/dateFormatter.js"],"names":["getUserLocale","getFormatter","options","locale","date","toLocaleString","toSafeHour","safeDate","Date","setHours","getSafeFormatter","formatDateOptions","day","month","year","formatLongDateOptions","formatMonthOptions","formatMonthYearOptions","formatYearOptions","formatShortWeekdayOptions","weekday","formatWeekdayOptions","formatDate","formatLongDate","formatMonth","formatMonthYear","formatYear","formatShortWeekday","formatWeekday"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,SAAO,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAC7B,WAAOA,IAAI,CAACC,cAAL,CAAoBF,MAAM,IAAIH,aAAa,EAA3C,EAA+CE,OAA/C,CAAP;AACD,GAFD;AAGD;AACD;;;;;;;;;;;AAWA,SAASI,UAAT,CAAoBF,IAApB,EAA0B;AACxB,MAAIG,QAAQ,GAAG,IAAIC,IAAJ,CAASJ,IAAT,CAAf;AACA,SAAO,IAAII,IAAJ,CAASD,QAAQ,CAACE,QAAT,CAAkB,EAAlB,CAAT,CAAP;AACD;;AAED,SAASC,gBAAT,CAA0BR,OAA1B,EAAmC;AACjC,SAAO,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAC7B,WAAOH,YAAY,CAACC,OAAD,CAAZ,CAAsBC,MAAtB,EAA8BG,UAAU,CAACF,IAAD,CAAxC,CAAP;AACD,GAFD;AAGD;;AAED,IAAIO,iBAAiB,GAAG;AACtBC,EAAAA,GAAG,EAAE,SADiB;AAEtBC,EAAAA,KAAK,EAAE,SAFe;AAGtBC,EAAAA,IAAI,EAAE;AAHgB,CAAxB;AAKA,IAAIC,qBAAqB,GAAG;AAC1BH,EAAAA,GAAG,EAAE,SADqB;AAE1BC,EAAAA,KAAK,EAAE,MAFmB;AAG1BC,EAAAA,IAAI,EAAE;AAHoB,CAA5B;AAKA,IAAIE,kBAAkB,GAAG;AACvBH,EAAAA,KAAK,EAAE;AADgB,CAAzB;AAGA,IAAII,sBAAsB,GAAG;AAC3BJ,EAAAA,KAAK,EAAE,MADoB;AAE3BC,EAAAA,IAAI,EAAE;AAFqB,CAA7B;AAIA,IAAII,iBAAiB,GAAG;AACtBJ,EAAAA,IAAI,EAAE;AADgB,CAAxB;AAGA,IAAIK,yBAAyB,GAAG;AAC9BC,EAAAA,OAAO,EAAE;AADqB,CAAhC;AAGA,IAAIC,oBAAoB,GAAG;AACzBD,EAAAA,OAAO,EAAE;AADgB,CAA3B;AAGA,OAAO,IAAIE,UAAU,GAAGZ,gBAAgB,CAACC,iBAAD,CAAjC;AACP,OAAO,IAAIY,cAAc,GAAGb,gBAAgB,CAACK,qBAAD,CAArC;AACP,OAAO,IAAIS,WAAW,GAAGd,gBAAgB,CAACM,kBAAD,CAAlC;AACP,OAAO,IAAIS,eAAe,GAAGf,gBAAgB,CAACO,sBAAD,CAAtC;AACP,OAAO,IAAIS,UAAU,GAAGhB,gBAAgB,CAACQ,iBAAD,CAAjC;AACP,OAAO,IAAIS,kBAAkB,GAAGjB,gBAAgB,CAACS,yBAAD,CAAzC;AACP,OAAO,IAAIS,aAAa,GAAGlB,gBAAgB,CAACW,oBAAD,CAApC","sourcesContent":["import getUserLocale from 'get-user-locale';\r\n\r\nfunction getFormatter(options) {\r\n  return function (locale, date) {\r\n    return date.toLocaleString(locale || getUserLocale(), options);\r\n  };\r\n}\r\n/**\r\n * Changes the hour in a Date to ensure right date formatting even if DST is messed up.\r\n * Workaround for bug in WebKit and Firefox with historical dates.\r\n * For more details, see:\r\n * https://bugs.chromium.org/p/chromium/issues/detail?id=750465\r\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1385643\r\n *\r\n * @param {Date} date Date.\r\n */\r\n\r\n\r\nfunction toSafeHour(date) {\r\n  var safeDate = new Date(date);\r\n  return new Date(safeDate.setHours(12));\r\n}\r\n\r\nfunction getSafeFormatter(options) {\r\n  return function (locale, date) {\r\n    return getFormatter(options)(locale, toSafeHour(date));\r\n  };\r\n}\r\n\r\nvar formatDateOptions = {\r\n  day: 'numeric',\r\n  month: 'numeric',\r\n  year: 'numeric'\r\n};\r\nvar formatLongDateOptions = {\r\n  day: 'numeric',\r\n  month: 'long',\r\n  year: 'numeric'\r\n};\r\nvar formatMonthOptions = {\r\n  month: 'long'\r\n};\r\nvar formatMonthYearOptions = {\r\n  month: 'long',\r\n  year: 'numeric'\r\n};\r\nvar formatYearOptions = {\r\n  year: 'numeric'\r\n};\r\nvar formatShortWeekdayOptions = {\r\n  weekday: 'short'\r\n};\r\nvar formatWeekdayOptions = {\r\n  weekday: 'long'\r\n};\r\nexport var formatDate = getSafeFormatter(formatDateOptions);\r\nexport var formatLongDate = getSafeFormatter(formatLongDateOptions);\r\nexport var formatMonth = getSafeFormatter(formatMonthOptions);\r\nexport var formatMonthYear = getSafeFormatter(formatMonthYearOptions);\r\nexport var formatYear = getSafeFormatter(formatYearOptions);\r\nexport var formatShortWeekday = getSafeFormatter(formatShortWeekdayOptions);\r\nexport var formatWeekday = getSafeFormatter(formatWeekdayOptions);"]},"metadata":{},"sourceType":"module"}